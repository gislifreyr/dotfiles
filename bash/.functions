extract() {
    if [ -f $1 ] ; then
        case $1 in
            *.tar.bz2)      tar xjf         ;;  
            .bz2)           tar xjf $1      ;;  
            *.tar.gz)       tar xzf $1      ;;  
            *.bz2)          bunzip2 $1      ;;  
            *.rar)          rar x $1        ;;  
            *.gz)           gunzip $1       ;;  
            *.tar)          tar xf $1       ;;  
            *.tbz2)         tar xjf $1      ;;  
            *.tgz)          tar xzf $1      ;;  
            *.zip)          unzip $1        ;;  
            *.Z)            uncompress $1   ;;  
            *)          echo "'$1' cannot be extracted via extract()" ;;
        esac
    else
        echo "'$1' is not a valid file"
    fi  
}

mkcd() {
    mkdir -p "$@"
    cd "$@"
}

hist() {
    HISTORYCMD="history $@"
    HISTORYCMD="${HISTORYCMD% }"
    eval "${HISTORYCMD// / | grep -i }"
}

digg() {
	dig +nocmd "$1" any +multiline +noall +answer
}

isitup() {
    ping -q -n -c25 -i0.1 $1 | awk -v host=$1 '/packet loss/{loss=$7} /round-trip/{trip=$4$5} END{print host,"--->",loss,"-",trip}'
}

docker-start() {
    machine_name=${1:-default}
    machine_status=$(docker-machine status $machine_name || echo "DoesNotExist")

    if [ "DoesNotExist" == $machine_status ]
    then
        return 1
    elif [ "Stopped" == $machine_status ]
    then
        docker-machine start $machine_name
    else
        echo "$machine_name --> $machine_status"
    fi

    eval $(docker-machine env $machine_name)
}
